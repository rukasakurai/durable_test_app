name: Build Frontend and Backend

on:
  push:
    branches:
      - "**"
    paths-ignore:
      - "README.md"

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install Azure Functions Core Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y azure-functions-core-tools-4

      - name: Install Azurite
        run: |
          sudo npm install -g azurite
          azurite --version

      - name: Start Azurite
        run: |
          azurite --silent &

      - name: Check requirements.txt is up to date
        run: |
          pip install pip-tools
          cd backend
          mv requirements.txt requirements.txt.bak
          pip-compile requirements.in
          if ! diff requirements.txt.bak requirements.txt; then
            echo "\nERROR: requirements.txt is not up to date with requirements.in."
            echo "To fix: Run 'pip-compile requirements.in' in the backend directory and commit the updated requirements.txt."
            echo "If you don't have pip-compile, install it with 'pip install pip-tools'."
            exit 1
          fi
          rm requirements.txt.tmp

      - name: Install backend dependencies
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install -r requirements.txt

      - name: Start backend
        run: |
          cd backend
          . ../.venv/bin/activate
          func host start --no-build --port 7071 &
          sleep 10 # Wait for the backend to initialize

  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "lts/*" # Use the latest stable LTS version

      - name: Print Node.js version
        run: node -v

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          npm run build
